{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bentd/Work/Ventures/dylanbent.com/Blog/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          query {\\n            home {\\n              name\\n              heroNouns\\n              greeting\\n              role\\n              skills\\n              university\\n              degree\\n              graduationDate\\n              hobbyLabel\\n              hobbyPhoto\\n              contactMessage\\n              contactEmail\\n              contactLabel1\\n              contactLink1\\n              contactLabel2\\n              contactLink2\\n              contactLabel3\\n              contactLink3\\n            }\\n          }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from \"React\";\nimport fetch from 'node-fetch';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport gql from \"graphql-tag\";\nimport Head from \"../components/head\";\nimport Nav from \"../components/nav\";\nimport Terminal from \"../components/terminal\";\nimport Info from \"../components/info\";\nvar cache = new InMemoryCache();\nvar link = new HttpLink({\n  uri: \"http://localhost:4000/\",\n  fetch: fetch\n});\nvar client = new ApolloClient({\n  cache: cache,\n  link: link\n});\n\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      client.query({\n        query: gql(_templateObject())\n      }).then(function (result) {\n        return console.log(result);\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        title: \"Dylan Bent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), __jsx(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), __jsx(Terminal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), __jsx(Info, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/bentd/Work/Ventures/dylanbent.com/Blog/pages/index.js"],"names":["Component","fetch","ApolloClient","InMemoryCache","HttpLink","gql","Head","Nav","Terminal","Info","cache","link","uri","client","retrieveFields","query","then","result","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,IAAMC,KAAK,GAAG,IAAIP,aAAJ,EAAd;AACA,IAAMQ,IAAI,GAAG,IAAIP,QAAJ,CAAa;AACxBQ,EAAAA,GAAG,EAAE,wBADmB;AAExBX,EAAAA,KAAK,EAAEA;AAFiB,CAAb,CAAb;AAKA,IAAMY,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC9BQ,EAAAA,KAAK,EAALA,KAD8B;AAE9BC,EAAAA,IAAI,EAAJA;AAF8B,CAAjB,CAAf;;;;;;;;;;;;;;;wCAQsB;AAClB,WAAKG,cAAL;AACD;;;6BAEQ;AAEPD,MAAAA,MAAM,CACHE,KADH,CACS;AACLA,QAAAA,KAAK,EAAEV,GAAF;AADA,OADT,EA2BGW,IA3BH,CA2BQ,UAAAC,MAAM;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,OA3Bd;AA6BA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EA9C0BjB,S","sourcesContent":["import { Component } from \"React\";\nimport fetch from 'node-fetch';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport gql from \"graphql-tag\";\nimport Head from \"../components/head\";\nimport Nav from \"../components/nav\";\nimport Terminal from \"../components/terminal\";\nimport Info from \"../components/info\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:4000/\",\n  fetch: fetch\n});\n\nconst client = new ApolloClient({\n  cache,\n  link\n});\n\nexport default class extends Component {\n\n\n  componentDidMount() {\n    this.retrieveFields();\n  }\n\n  render() {\n\n    client\n      .query({\n        query: gql`\n          query {\n            home {\n              name\n              heroNouns\n              greeting\n              role\n              skills\n              university\n              degree\n              graduationDate\n              hobbyLabel\n              hobbyPhoto\n              contactMessage\n              contactEmail\n              contactLabel1\n              contactLink1\n              contactLabel2\n              contactLink2\n              contactLabel3\n              contactLink3\n            }\n          }\n        `\n      })\n      .then(result => console.log(result));\n\n    return (\n      <div>\n        <Head title=\"Dylan Bent\"></Head>\n        <Nav></Nav>\n        <Terminal></Terminal>\n        <Info></Info>\n      </div>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}