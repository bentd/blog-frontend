{"ast":null,"code":"var _jsxFileName = \"/Users/bentd/Work/Ventures/dylanbent.com/Blog/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"React\";\nimport Head from \"../components/head\";\nimport Nav from \"../components/nav\";\nimport Terminal from \"../components/terminal\";\nimport Info from \"../components/info\";\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nexport default class extends Component {\n  render() {\n    client.query({\n      query: gql`\n          query {\n            home {\n              name\n            }\n          }\n        `\n    }).then(result => console.log(result));\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      title: \"Dylan Bent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), __jsx(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), __jsx(Terminal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), __jsx(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:4000/\"\n});\nconst client = new ApolloClient({\n  cache,\n  link\n});","map":{"version":3,"sources":["/Users/bentd/Work/Ventures/dylanbent.com/Blog/pages/index.js"],"names":["Component","Head","Nav","Terminal","Info","ApolloClient","InMemoryCache","NormalizedCacheObject","HttpLink","render","client","query","gql","then","result","console","log","cache","link","uri"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,EAAwBC,qBAAxB,QAAqD,uBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,cAAcR,SAAd,CAAwB;AAErCS,EAAAA,MAAM,GAAG;AAEPC,IAAAA,MAAM,CACHC,KADH,CACS;AACLA,MAAAA,KAAK,EAAEC,GAAI;;;;;;;AADN,KADT,EAUGC,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;AAYA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAxBoC;AA4BvC,MAAMG,KAAK,GAAG,IAAIX,aAAJ,EAAd;AACA,MAAMY,IAAI,GAAG,IAAIV,QAAJ,CAAa;AACxBW,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,MAAMT,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BY,EAAAA,KAD8B;AAE9BC,EAAAA;AAF8B,CAAjB,CAAf","sourcesContent":["import { Component } from \"React\";\nimport Head from \"../components/head\";\nimport Nav from \"../components/nav\";\nimport Terminal from \"../components/terminal\";\nimport Info from \"../components/info\";\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nexport default class extends Component {\n\n  render() {\n\n    client\n      .query({\n        query: gql`\n          query {\n            home {\n              name\n            }\n          }\n        `\n      })\n      .then(result => console.log(result));\n\n    return (\n      <div>\n        <Head title=\"Dylan Bent\"></Head>\n        <Nav></Nav>\n        <Terminal></Terminal>\n        <Info></Info>\n      </div>\n    )\n  }\n\n}\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:4000/\"\n});\n\nconst client = new ApolloClient({\n  cache,\n  link\n});\n"]},"metadata":{},"sourceType":"module"}